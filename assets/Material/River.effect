// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - name: default
    passes:
    - vert: vs
      frag: fs
      depthStencilState:
        depthTest: true
        depthWrite: true
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        speed0: { value: 0.5 }
        speed1: { value: 0.8 }
        speed2: { value: 0.2 }
        diffuseTexture0: { value: white }
        diffuseTexture1: { value: white }
        diffuseTexture2: { value: white }
}%

CCProgram vs %{
	precision highp float;

	#include <cc-local>
    #include <cc-global>
    #include <input-standard>

    out mediump vec2 v_uv0;

    void main () {
        StandardVertInput In;
        CCVertInput(In);

        v_uv0 = In.uv;

        gl_Position = cc_matViewProj * cc_matWorld * In.position;
    }
}%


CCProgram fs %{
	precision highp float;

	#include <texture>
    #include <output>
    #include <cc-global>
    #include <cc-local>

	in vec2 v_uv0;
	uniform sampler2D diffuseTexture0;
    uniform sampler2D diffuseTexture1;
    uniform sampler2D diffuseTexture2;

    uniform CUSTOM {
        float speed0;
        float speed1;
        float speed2;
    };

	void main () {
        vec4 o = texture(diffuseTexture0, v_uv0 + vec2(cc_time.x * speed0, 0));

        vec4 o1 = texture(diffuseTexture1, (vec2(1., 0.) + v_uv0) + vec2(cc_time.x * speed1, 0));
        o = o1 * o1.w + o * o.w;

        vec4 o2 = texture(diffuseTexture2, v_uv0 + vec2(cc_time.x * speed2, 0));
        o = o2 * o2.w + o * o.w;

		gl_FragColor = o;
  	}
}%
